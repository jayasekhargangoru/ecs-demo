name: Build and push docker image to ECR

on: push


jobs:

  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ecs-demo
        IMAGE_TAG: ${{ github.run_number }}
        REPOSITORY_URI: $ECR_REGISTRY/$ECR_REPOSITORY
        AWS_REGION: ap-south-1
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update task definition
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ecs-demo
        IMAGE_TAG: ${{ github.run_number }}
        REPOSITORY_URI: $ECR_REGISTRY/$ECR_REPOSITORY
        AWS_REGION: ap-south-1
      run: |
        echo Update the REPOSITORY_URI:IMAGE_TAG in task definition...
        cat taskdefinition.json | jq --arg uri "$ECR_REGISTRY/$ECR_REPOSITORY" --arg tag "$IMAGE_TAG" '.containerDefinitions[0].image = "\($uri):\($tag)"' > taskdefinition.tmp
        mv taskdefinition.tmp taskdefinition.json
        cat taskdefinition.json
